{"version":3,"sources":["components/layout/Navbar.js","components/Card.js","pages/Personal.js","pages/Leaderboard.js","components/BurnDown.js","components/burnDown/BurnDownContainer.js","components/DateRange.js","pages/Team.js","components/TeamList.js","components/teamList/TeamListContainer.js","pages/DailyStandUp.js","components/SyncConfig/SyncConfigSettings.js","constants.js","components/SyncConfig/SaveSyncConfig.js","components/SyncConfig/SyncConfigContainer.js","pages/Settings.js","components/apicalls/Client.js","App.js","serviceWorker.js","index.js"],"names":["burgerToggle","linksEl","document","querySelector","style","display","BlueRect","height","width","backgroundColor","navStyle","color","padding","boxShadow","linkStyle","textDecoration","textAlign","linkStyleImg","float","Navbar","className","onClick","to","src","Card","useState","useEffect","Axios","get","then","profileCardStyle","alt","margin","maxWidth","position","top","left","Home","Leaderboard","BurnDown","items","forEach","item","TotalCards","totalItems","ScrumPoints","totalDonePoint","BurnDownPoints","totalPoint","readableDate","Date","date","toUTCString","split","data","right","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","BurnDownContainer","startDate","dates","useSuspenseQuery","method","endpoint","toISOString","endDate","headers","btoa","loading","payload","error","query","onReload","prototype","addDays","days","this","valueOf","setDate","getDate","lineChartStyle","DateRange","startDateValue","setStartDate","endDateValue","selected","onChange","selectsStart","filterDate","day","getDay","placeholderText","Team","TeamList","size","console","log","TeamListContainer","key","token","DailyStandUp","SyncConfigSettings","settings","keyState","tokenState","boardsState","boards","htmlFor","name","value","event","target","map","index","id","doneListId","doingListId","testingListId","reviewingListId","BACKEND_URL","SaveSyncConfig","onSubmit","e","preventDefault","getSyncConfigAction","SyncConfigContainer","useQuery","saveSyncConfigAction","formValues","body","SaveSyncConfigContainer","useMutation","mutate","handleSubmit","reset","abort","a","Settings","host","Client","createClient","requestInterceptors","client","action","App","basename","fallback","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e4ac8b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <div className=\"navNarrow\">\r\n                <i onClick={burgerToggle} className=\"fa fa-bars\" style={navStyle}/>\r\n                <div className=\"narrowLinks\">\r\n                    <Link to=\"/\" style={linkStyle}> Personal </Link>\r\n                    <Link to=\"/Team\" style={linkStyle}> Team</Link>\r\n                    <Link to=\"/DailyStandUp\" style={linkStyle}> StandUp </Link>\r\n                    <Link to=\"/Leaderboard\" style={linkStyle}> Leaderboard </Link>\r\n                    <Link to=\"/Settings\" style={linkStyle}> Settings </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navWide\">\r\n                <div style={navStyle}>\r\n                   <Link to=\"/\" onClick={burgerToggle} ><img src=\"Logo.jpg\" style={linkStyleImg}  /></Link>\r\n                    <Link to=\"/\" onClick={burgerToggle} style={linkStyle}> Personal </Link>\r\n                    |\r\n                    <Link to=\"/Team\" onClick={burgerToggle} style={linkStyle}> Team </Link>\r\n                    |\r\n                    <Link to=\"/DailyStandUp\" onClick={burgerToggle} style={linkStyle}> StandUp </Link>\r\n                    |\r\n                    <Link to=\"/Leaderboard\" onClick={burgerToggle} style={linkStyle}> Leaderboard </Link>\r\n                    |\r\n                    <Link to=\"/Settings\" onClick={burgerToggle} style={linkStyle}> Settings </Link>\r\n                </div>\r\n                <div className=\"blueRect\" style={BlueRect}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction burgerToggle() {\r\n    let linksEl = document.querySelector('.narrowLinks');\r\n    if (linksEl.style.display === 'block') {\r\n        linksEl.style.display = 'none';   //toggle the drop-down based on its current CSS display value\r\n    } else {\r\n        linksEl.style.display = 'block';\r\n    }\r\n}\r\n\r\nconst BlueRect = {\r\n    height: '50px',\r\n    width: '100%',\r\n    backgroundColor: '#21A2DC'\r\n}\r\n\r\nconst navStyle = {\r\n    backgroundColor: '#f9f9f9',\r\n    color: '#6f7982',\r\n    padding: '20px',\r\n    boxShadow: '0 2px 2px 0 rgba(0, 0, 0, 0.2)',\r\n\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#6f7982',\r\n    textDecoration: 'none',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n\r\n}\r\n\r\nconst linkStyleImg = {\r\n    \r\n    color: '#6f7982',\r\n    textDecoration: 'none',\r\n    float: 'left'\r\n}\r\n\r\n\r\nexport default Navbar;","import React, {useState , useEffect} from 'react'\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nexport default function Card() {\r\n    const [tableContent, setTableContent] = useState([])\r\n    useEffect(() => {\r\n        Axios.get().then()\r\n    })\r\n    return (\r\n        <div className='profileCard' style={profileCardStyle}>\r\n           <h2>This is a profile card</h2> \r\n           <img src=\"https://img.pngio.com/parent-directory-avatar-2png-avatar-png-256_256.png\" alt=\"profile pic\" />\r\n           <h3>Name</h3>\r\n           <p>jobdesc</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst profileCardStyle = {\r\n    color:'#000',\r\n    textDecoration: 'none',\r\n    float: 'left',\r\n    padding: \"30px\",\r\n    margin: \"20px\",\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)',\r\n    maxWidth: '300px',\r\n    textAlign: 'center',\r\n    position: 'absolute',\r\n    display: 'block',\r\n    top: '110px',\r\n    left: '220px',\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport Card from \"../components/Card\";\r\n\r\nfunction Home() {\r\n    return (\r\n      <div className=\"Home\">\r\n       \r\n         <Card />\r\n\r\n             \r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\n\r\n\r\nfunction Leaderboard() {\r\n    return (\r\n      <div className=\"Leaderboard\">\r\n     \r\n               <h4>[Under construction]</h4>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Leaderboard;","import React from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst BurnDown = ({ items }) => {\r\n  \r\n  items.items.forEach(item => {\r\n    item.TotalCards = item.totalItems\r\n    item.ScrumPoints = item.totalDonePoint;\r\n    item.BurnDownPoints = item.totalPoint - item.totalDonePoint;\r\n    item.readableDate = new Date(item.date).toUTCString().split('2019', 1)[0];\r\n    \r\n  });\r\n  \r\n    // pass in data from BurnDownContainer\r\n   \r\n  return ( \r\n    \r\n      //  linechart build\r\n    <div> \r\n       <h3 >Tasks</h3>\r\n     \r\n     <LineChart\r\n      width={1000}\r\n      height={600}\r\n      data= {items.items} //pass in data items from burndowncontainer\r\n      margin={{\r\n        top: 20, right: 50, left: 20, bottom: 20,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey= 'readableDate' />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"BurnDownPoints\" stroke=\"#ff9ff3\" activeDot={{ r: 3 }} />\r\n      <Line type=\"monotone\" dataKey=\"ScrumPoints\" stroke=\"#12CBC4\" activeDot={{ r: 3 }} /> \r\n      <Line type=\"monotone\" dataKey=\"TotalCards\" stroke=\"#5758BB\" activeDot={{ r: 3 }} /> \r\n      {/* Use data key from items */}    \r\n    </LineChart>\r\n    </div>\r\n   );\r\n}\r\nexport default BurnDown;\r\n","import React from 'react';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport BurnDown from '../BurnDown';\r\n\r\nexport const fetchDonePoints = (dates) => {  //fetch with dates\r\n\r\n  return {\r\n    method: 'GET',\r\n    endpoint: 'board/qDAFPals/burndownchartinfo/?startDate=' +    //get startDate from dates\r\n    dates.startDate.toISOString().split('T', 1)[0] +      //set to ISO and split time\r\n          '&endDate=' + \r\n          dates.endDate.toISOString().split('T', 1)[0],    //get endDate from dates\r\n    headers: {\"Authorization\": \"Basic \" + btoa(\"test:test\")}\r\n  }\r\n}\r\n\r\nexport const BurnDownContainer = (startDate) => {\r\n\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchDonePoints(startDate)); \r\n\r\n  return (\r\n    <div>\r\n      <BurnDown loading={loading} error={error} items={payload} onReload={query}/>  \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default BurnDownContainer;\r\n\r\n\r\n//query data and send to BurnDown\r\n","import React, {useState} from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport BurnDownContainer from './burnDown/BurnDownContainer'; \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nDate.prototype.addDays = function(days) {\r\n  var date = new Date(this.valueOf());\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n}\r\n\r\nexport function DateRange() {\r\n\r\n    const [startDateValue, setStartDate] = useState(new Date());\r\n    const [endDateValue] = useState(new Date().addDays(14));  //add 14 days as endDate\r\n      const isWeekday = date => {   //filter for only week days\r\n        const day = date.getDay();\r\n        return day !== 0 && day !== 6;\r\n      };\r\n    return (\r\n      <div style={lineChartStyle}>\r\n        <DatePicker\r\n          selected={startDateValue}\r\n          onChange={date => setStartDate(date)}\r\n          selectsStart\r\n          startDate={startDateValue}\r\n          endDate={endDateValue}\r\n          filterDate={isWeekday}\r\n          placeholderText=\"Select a weekday\"\r\n        />\r\n        <BurnDownContainer \r\n          endDate={endDateValue}\r\n          startDate={startDateValue}\r\n        />\r\n      </div>\r\n    ); \r\n  }; \r\n  const  lineChartStyle = {\r\n    float: 'right',\r\n    margin: '10'\r\n  }\r\n\r\n  export default DateRange","import React from 'react';\r\n\r\nimport DateRange from '../components/DateRange'\r\n\r\nfunction Team() {\r\n  \r\n\r\n    return (\r\n      <div className=\"Team\"> \r\n      {/* Pass in data for container component. */}\r\n        {/* <BurnDownContainer />  */}\r\n        <DateRange />\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Team;\r\n  ","import React from 'react'\r\n\r\nconst TeamList = ({ size }) => {\r\n\r\n    // items.items.forEach(item => {\r\n    //  item.\r\n      console.log(size)\r\n    // });\r\n    return (\r\n        <div>\r\n           <h4> {size} </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamList","import React from 'react';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport TeamList from '../TeamList';\r\n\r\nexport const fetchMembers = () => { \r\n\r\n    return {\r\n        method: 'GET',\r\n        endpoint: 'board/qDAFPals/members',   //get all mebers\r\n        headers: {\"Authorization\": \"Basic \" + btoa(\"test:test\")},\r\n        key: \"62f0297bf821e374ae28a1fbab5ef9fb\",\r\n        token: \"dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5\"\r\n    \r\n    }\r\n}\r\n\r\nexport const TeamListContainer = () => {\r\n\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchMembers()); \r\n\r\n  return (\r\n    <div>\r\n      <TeamList loading={loading} error={error} items={payload} onReload={query}/>  \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default TeamListContainer;\r\n\r\n\r\n//query data and send to TeamList\r\n","import React from 'react'\r\nimport TeamListContainer from '../components/teamList/TeamListContainer'\r\n\r\nexport default function DailyStandUp() {\r\n    return (\r\n        <div>\r\n             <h4>[Constructing some leg muscles...]</h4>\r\n             <TeamListContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport {SaveSyncConfigContainer} from \"./SyncConfigContainer\";\r\n\r\nexport const SyncConfigSettings = ({loading, error, settings}) => {\r\n    const keyState = useState(settings.key);\r\n    const tokenState = useState(settings.token);\r\n    const boardsState = useState(settings.boards);\r\n\r\n    settings.key = keyState[0];\r\n    settings.token = tokenState[0];\r\n    settings.boards = boardsState[0];\r\n\r\n    return (\r\n        <div className=\"sync-settings\">\r\n            {loading &&\r\n                <p>Loading Data</p>\r\n            }\r\n            {error &&\r\n                <p>ERROR!</p>\r\n            }\r\n            <form>\r\n                <h2>Sync Settings</h2>\r\n                <div>\r\n                    <div>\r\n                        <label htmlFor=\"key\">Trello Key</label>\r\n                        <input type=\"text\" name=\"key\" value={keyState[0]} onChange={event => keyState[1](event.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"token\">Trello OAuth Token</label>\r\n                        <input type=\"text\" name=\"token\" value={tokenState[0]} onChange={event => tokenState[1](event.target.value)} />\r\n                    </div>\r\n                    {boardsState[0] && boardsState[0].map((value, index) => (\r\n                        <div className=\"sync-settings-board\">\r\n                            <div>\r\n                                <label htmlFor={\"id-\"+index}>Board ID</label>\r\n                                <input type=\"text\" className=\"form-control\" name={\"id-\"+index} value={value.id} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor={\"doneListId-\"+index}>Done list ID</label>\r\n                                <input type=\"text\" className=\"form-control\" name={\"doneListId-\"+index} value={value.doneListId} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor={\"doingListId-\"+index}>Doing list ID</label>\r\n                                <input type=\"text\" className=\"form-control\" name={\"doingListId-\"+index} value={value.doingListId} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor={index + \"testingListId\"}>Testing list ID</label>\r\n                                <input type=\"text\" className=\"form-control\" name={index + \"testingListId\"} value={value.testingListId} />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor={index + \"reviewingListId\"}>Reviewing list ID</label>\r\n                                <input type=\"text\" className=\"form-control\" name={index + \"reviewingListId\"} value={value.reviewingListId} />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <SaveSyncConfigContainer />\r\n            </form>\r\n        </div>\r\n    )\r\n};","export const TESTING_BACKEND_URL = \"http://trelloextension.eu-west-1.elasticbeanstalk.com\";\r\nexport const LOCAL_BACKEND_URL = \"http://localhost:8080\";\r\nexport const BACKEND_URL = TESTING_BACKEND_URL;","import React from \"react\";\r\n\r\nexport const SaveSyncConfig = ({loading, error, onSubmit}) => {\r\n    return (\r\n        <div>\r\n            {loading &&\r\n                <p>Saving</p>\r\n            }\r\n\r\n            <button>Back</button>\r\n            <button onClick={e => {\r\n                e.preventDefault();\r\n                onSubmit()\r\n            }\r\n                }>Submit</button>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {Action, useMutation, useQuery} from \"react-fetching-library\";\r\nimport {SyncConfigSettings} from \"./SyncConfigSettings\";\r\nimport {BACKEND_URL} from \"../../constants\";\r\nimport {SaveSyncConfig} from \"./SaveSyncConfig\";\r\n\r\n\r\nconst getSyncConfigAction = {\r\n    method: \"GET\",\r\n    endpoint: BACKEND_URL + \"/config/getSyncInfo\",\r\n    headers:\r\n        {\"Authorization\": \"Basic \" + btoa(\"test:test\")}\r\n\r\n\r\n};\r\n\r\nexport const SyncConfigContainer = () => {\r\n    const { loading, payload, error } = useQuery(getSyncConfigAction);\r\n\r\n    if (!payload) {\r\n        const tempPayload = {\r\n            key: \"\",\r\n            token: \"\",\r\n            boards: []\r\n        };\r\n\r\n        return <p>Loading</p>\r\n        //return <SyncConfigSettings loading={loading} error={error} settings={tempPayload} />\r\n    } else {\r\n        console.log(payload);\r\n\r\n        return <SyncConfigSettings loading={loading} error={error} settings={payload} />\r\n    }\r\n};\r\n\r\nconst saveSyncConfigAction = (formValues) => ({\r\n    method: 'PUT',\r\n    endpoint: BACKEND_URL + \"/config/saveSync\",\r\n    body: formValues\r\n});\r\n\r\nexport const SaveSyncConfigContainer = () => {\r\n    const { loading, payload, mutate, error, reset, abort } = useMutation(saveSyncConfigAction);\r\n\r\n    const handleSubmit = async (formValues) => {\r\n        const { error: mutateError } = await mutate(formValues);\r\n\r\n        if (mutateError) {\r\n            //show ie. notification\r\n            console.error(error)\r\n        }\r\n        console.log(\"Saved\")\r\n        //success\r\n    };\r\n\r\n    return <SaveSyncConfig loading={loading} error={error} onSubmit={handleSubmit}/>\r\n};\r\n\r\n","import React from 'react';\r\nimport {SyncConfigContainer} from \"../components/SyncConfig/SyncConfigContainer\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div className=\"settings\">\r\n            <h1>Settings</h1>\r\n            <SyncConfigContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","import { createClient } from 'react-fetching-library';\r\n\r\n\r\n// In real application this const will be stored in ENV's\r\nconst HOST = 'http://trelloextension.eu-west-1.elasticbeanstalk.com/';\r\n\r\nexport const requestHostInterceptor = host => client => async action => {\r\n  return {\r\n    ...action,\r\n    endpoint: `${host}${action.endpoint}`,\r\n  };\r\n};\r\n\r\nexport const Client = createClient({\r\n  requestInterceptors: [requestHostInterceptor(HOST)],\r\n});\r\n\r\n\r\n","import React, { Suspense, Component } from 'react';\r\nimport Navbar from './components/layout/Navbar'\r\nimport './App.css';\r\n// import {Route} from \"react-router\";\r\nimport { HashRouter, Route, Link } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Personal\";\r\nimport Leaderboard from \"./pages/Leaderboard\";\r\nimport Team from \"./pages/Team\";\r\nimport DailyStandUp from './pages/DailyStandUp'\r\n\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport Settings from \"./pages/Settings\";\r\nimport { ClientContextProvider } from 'react-fetching-library';\r\nimport { Client } from './components/apicalls/Client';\r\n\r\n\r\n  //added fetching-library client to root.\r\n  \r\n \r\nfunction App() {\r\n    return (\r\n   <HashRouter basename='/'>\r\n    <ClientContextProvider client={Client}> \r\n    <Suspense fallback={<span>Loading</span>}>\r\n        <div className=\"App\">\r\n            <Router>\r\n                <Navbar/>\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Route path=\"/Leaderboard\" component={Leaderboard}/>\r\n                <Route path=\"/Team\" component={Team}/>\r\n                <Route path=\"/DailyStandUp\" component={DailyStandUp}/>\r\n                <Route exact path=\"/Settings\" component={Settings}/>  \r\n            </Router>\r\n        </div>\r\n        </Suspense> \r\n        </ClientContextProvider>\r\n        {/* Routing for nav\r\n        suspense lazy loading added */}\r\n        </HashRouter> \r\n        // Routing for github pages\r\n    );\r\n    \r\n}\r\nexport default App\r\n \r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ClientContextProvider, createClient} from \"react-fetching-library\";\r\n\r\nconst client = createClient({\r\n});\r\n\r\nReactDOM.render(\r\n        <ClientContextProvider client={client}>\r\n            <App />\r\n        </ClientContextProvider>,\r\n        document.getElementById('root')\r\n    );\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}