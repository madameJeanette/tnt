{"version":3,"sources":["components/layout/Navbar.js","components/apicalls/Client.js","components/Card.js","pages/Personal.js","pages/Leaderboard.js","components/BurnDown.js","components/TotalCards.js","components/burnDown/BurnDownContainer.js","components/DateRange.js","pages/Team.js","components/apicalls/actions/fetchDailyStandUp.js","components/Statistics.js","components/dailyStandUp/DailyStandUpContainer.js","components/apicalls/actions/fetchDailyCards.js","components/DailyStandUpCards.js","components/dailyStandUp/DailyCardContainer.js","components/TeamList.js","components/teamList/TeamListContainer.js","components/PersonalActivity.js","components/personalActivity/PersonalActivityContainer.js","pages/DailyStandUp.js","components/SyncConfig/SaveSyncConfig.js","components/SyncConfig/SyncConfigContainer.js","pages/Settings.js","components/Login.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js","faTeqPlay.js"],"names":["Navbar","className","to","style","fontSize","color","padding","margin","host","Client","createClient","requestInterceptors","client","action","a","endpoint","Card","useState","useEffect","Axios","get","then","profileCardStyle","src","alt","textDecoration","float","boxShadow","maxWidth","textAlign","position","display","top","left","Personal","Leaderboard","BurnDown","items","teamName","forEach","item","ScrumPoints","totalDonePoint","BurnDownPoints","totalPoint","readableDate","Date","date","toUTCString","split","width","height","data","right","bottom","strokeDasharray","dataKey","stroke","type","activeDot","r","TotalCards","totalItems","BurnDownContainer","useSuspenseQuery","credentials","localStorage","getItem","method","boardId","startDate","toISOString","endDate","headers","btoa","fetchDonePoints","loading","payload","error","query","onReload","prototype","addDays","days","this","valueOf","setDate","getDate","DateRange","startSprint","realStartSprint","calculateCurrentSprintStart","today","endSprint","startDateValue","setStartDate","selected","onChange","selectsStart","filterDate","getDay","placeholderText","Team","fetchDailyStandUp","Statistics","console","log","day","toDo","totalDoing","done","totalDone","review","totalReviewing","testing","totalTesting","fill","DailyStandUpContainer","fetchDailyCards","CardList","props","Content","header","Header","description","Description","meta","Label","DailyStandUpCards","Carditems","map","members","member","labels","label","key","id","name","MemberId","fullName","LabelId","TeamList","TeamListContainer","token","fetchMembers","PersonalActivity","PersonalActivityContainer","fetchMemberActivity","DailyStandUp","DailyCardContainer","SaveSyncConfig","settings","onSubmit","setKey","setToken","boards","setBoards","htmlFor","value","event","target","index","tempBoards","board","changeBoardItem","onClick","e","preventDefault","getSyncConfigAction","saveSyncConfigAction","formValues","body","SyncConfigContainer","getQuery","saveMutation","useMutation","handleSubmit","mutate","mutateError","Settings","loginAction","username","password","Login","setUsername","setPassword","loginMutation","setItem","Grid","verticalAlign","Column","as","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","Button","href","LoginPage","App","loggedIn","storedName","storedPw","check","fallback","basename","CheckIfLoggedIn","exact","path","component","Home","Boolean","window","location","hostname","match","library","add","prefix","iconName","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4654234.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Navbar() {\r\n  const TEQPLAY_BLUE = \"#23A3DD\";\r\n\r\n  return (\r\n          <nav>\r\n            <div className=\"navWide\">\r\n            <Link to=\"/\" >\r\n              <div\r\n                style={{\r\n                  fontSize: 45,\r\n                  color: TEQPLAY_BLUE,\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                <i className=\"fa fa-teqplay fa-spin\" />\r\n              </div>\r\n                  \r\n            </Link>\r\n            <Link to=\"/\" className=\"linkStyle\"> Personal </Link>\r\n            |\r\n            <Link to=\"/Team\" className=\"linkStyle\"> Team </Link>\r\n            |\r\n            <Link to=\"/DailyStandUp\" className=\"linkStyle\"> StandUp </Link>\r\n            |\r\n            <Link to=\"/Leaderboard\" className=\"linkStyle\"> Leaderboard </Link>\r\n            |\r\n            <Link to=\"/Settings\" className=\"linkStyle\"> Settings </Link>              \r\n                  \r\n            <hr></hr>\r\n          </div>\r\n    \r\n\r\n          <div className=\"navNarrow\">\r\n            <i className=\"fa fa-teqplay\"  style={{\r\n                fontSize: 10,\r\n                color: TEQPLAY_BLUE,\r\n                margin: \"5px\"\r\n              }}/>\r\n            <div className=\"narrowLinks\">\r\n              <Link to=\"/Personal\" className=\"linkStyle\"> Personal </Link>\r\n              <Link to=\"/Team\" className=\"linkStyle\"> Team</Link>\r\n              <Link to=\"/DailyStandUp\" className=\"linkStyle\"> StandUp </Link>\r\n              <Link to=\"/Leaderboard\" className=\"linkStyle\"> Leaderboard </Link>\r\n              <Link to=\"/Settings\" className=\"linkStyle\"> Settings </Link>\r\n            </div>\r\n          </div>  \r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import { createClient } from 'react-fetching-library';\r\n\r\n\r\n// In real application this const will be stored in ENV's\r\nconst HOST = 'http://backendtrelloextension.teqplay.nl/';\r\nconst LOCALHOST = 'http://localhost:8080/';\r\n\r\nexport const requestHostInterceptor = host => client => async action => {\r\n  return {\r\n    ...action,\r\n    endpoint: `${host}${action.endpoint}`,\r\n  };\r\n};\r\n\r\nexport const Client = createClient({\r\n  requestInterceptors: [requestHostInterceptor(HOST)],\r\n});\r\n\r\n\r\n","import React, {useState , useEffect} from 'react'\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nexport default function Card() {\r\n    const [tableContent, setTableContent] = useState([])\r\n    useEffect(() => {\r\n        Axios.get().then()\r\n    })\r\n    return (\r\n        <div className='profileCard' style={profileCardStyle}>\r\n           <h2>This is a profile card</h2> \r\n           <img src=\"https://img.pngio.com/parent-directory-avatar-2png-avatar-png-256_256.png\" alt=\"profile pic\" />\r\n           <h3>Name</h3>\r\n           <p>jobdesc</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst profileCardStyle = {\r\n    color:'#000',\r\n    textDecoration: 'none',\r\n    float: 'left',\r\n    padding: \"30px\",\r\n    margin: \"20px\",\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)',\r\n    maxWidth: '300px',\r\n    textAlign: 'center',\r\n    position: 'absolute',\r\n    display: 'block',\r\n    top: '110px',\r\n    left: '220px',\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport Card from \"../components/Card\";\r\n\r\nfunction Personal() {\r\n    return (\r\n      <div className=\"Personal\"> \r\n         <Card />\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Personal;","import React from 'react';\r\n\r\n\r\nfunction Leaderboard() {\r\n    return (\r\n      <div className=\"Leaderboard\">\r\n     \r\n               <h4>[Under construction]</h4>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Leaderboard;","import React from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst BurnDown = ({ items, teamName }) => {\r\n  \r\n  items.items.forEach(item => {\r\n    \r\n    item.ScrumPoints = item.totalDonePoint;\r\n    item.BurnDownPoints = item.totalPoint - item.totalDonePoint;\r\n    item.readableDate = new Date(item.date).toUTCString().split('2019', 1)[0];\r\n    \r\n  });\r\n  \r\n    // pass in data from BurnDownContainer\r\n   \r\n  return ( \r\n    \r\n      //  linechart build\r\n    <div> \r\n      <h1>{teamName}</h1>\r\n\r\n    <ResponsiveContainer width= '100%' height= {750}>\r\n     <LineChart \r\n      data= {items.items} //pass in data items from burndowncontainer\r\n      margin={{\r\n        top: 20, right: 50, left: 20, bottom: 20,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey= 'readableDate' stroke=\"#f9f9f9\" />\r\n      <YAxis stroke=\"#f9f9f9\"/>\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"BurnDownPoints\" stroke=\"#F16921\" activeDot={{ r: 3 }} />\r\n      <Line type=\"monotone\" dataKey=\"ScrumPoints\" stroke=\"#21a2dc\" activeDot={{ r: 3 }} /> \r\n      {/* Use data key from items */}    \r\n    </LineChart>\r\n    </ResponsiveContainer>\r\n    </div>\r\n   );\r\n}\r\nexport default BurnDown;\r\n","import React from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst TotalCards = ({ items }) => {\r\n  \r\n  items.items.forEach(item => {\r\n    item.TotalCards = item.totalItems\r\n    item.readableDate = new Date(item.date).toUTCString().split('2019', 1)[0];\r\n    \r\n  });\r\n  \r\n    // pass in data from BurnDownContainer\r\n   \r\n  return ( \r\n   \r\n      //  linechart build\r\n    <div>   \r\n   <ResponsiveContainer width= \"100%\" height= {725}>\r\n     <LineChart \r\n      data= {items.items} //pass in data items from burndowncontainer\r\n      margin={{\r\n        top: 20, right: 50, left: 20, bottom: 20,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3 \" />\r\n      <XAxis dataKey= 'readableDate' stroke=\"#f9f9f9\" />\r\n      <YAxis stroke=\"#f9f9f9\"/>\r\n      <Tooltip />\r\n      <Legend />\r\n      <Line type=\"monotone\" dataKey=\"TotalCards\" stroke=\"#ff9ff3\" activeDot={{ r: 3 }} /> \r\n      {/* Use data key from items */}    \r\n    </LineChart>\r\n    </ResponsiveContainer>\r\n    </div>\r\n   );\r\n}\r\nexport default TotalCards;\r\n","import React from 'react';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport BurnDown from '../BurnDown';\r\nimport TotalCards from '../TotalCards';\r\n\r\nexport const fetchDonePoints = (data) => {  //fetch with dates\r\n  var credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\n  return {\r\n    method: 'GET',\r\n    endpoint: 'board/' + data.boardId + '/burndownchartinfo/?startDate=' +    //get startDate from dates\r\n    data.startDate.toISOString().split('T', 1)[0] +      //set to ISO and split time\r\n          '&endDate=' + \r\n          data.endDate.toISOString().split('T', 1)[0],    //get endDate from dates\r\n    headers: {\"Authorization\": \"Basic \" + btoa(credentials)}\r\n  }\r\n}\r\n\r\nexport const BurnDownContainer = (data) => {\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchDonePoints(data));\r\n\r\n  return (\r\n  <div className = 'burnDownOne'>\r\n    <BurnDown loading={loading} error={error} items={payload} onReload={query} teamName={data.teamName}/>  \r\n    <TotalCards  loading={loading} error={error} items={payload} onReload={query}  />\r\n  </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default BurnDownContainer;\r\n\r\n\r\n//query data and send to BurnDown\r\n","import React, {useState} from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport BurnDownContainer from './burnDown/BurnDownContainer'; \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\n\r\nDate.prototype.addDays = function(days) {\r\n  var date = new Date(this.valueOf());\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n}\r\n\r\nfunction calculateCurrentSprintStart(today, startSprint) {\r\n  var endSprint = startSprint.addDays(14)\r\n  if (today > endSprint) {\r\n    return calculateCurrentSprintStart(today, endSprint)\r\n  } else {\r\n    return startSprint\r\n  }\r\n}\r\n\r\nexport function DateRange() {\r\n    var startSprint = new Date(\"2019/09/24\");//eertste sprint\r\n    var realStartSprint = calculateCurrentSprintStart(new Date(), startSprint);\r\n\r\n    const [startDateValue, setStartDate] = useState(realStartSprint);\r\n      const isTuesday = date => {   //filter for only week days\r\n        const day = date.getDay();\r\n      \r\n        return day == 1;\r\n      };\r\n    const endDate = realStartSprint.addDays(14)\r\n    return (\r\n      <div>    \r\n        <DatePicker className=\"datePicker\"\r\n          selected={startDateValue}\r\n          onChange={date => setStartDate(date)}\r\n          selectsStart\r\n          startDate={startDateValue}\r\n          endDate={endDate}\r\n          filterDate={isTuesday}\r\n          placeholderText=\"Select a Tuesday\"\r\n        \r\n        />\r\n        <div className = 'flex-container'>\r\n\r\n          <BurnDownContainer \r\n            endDate={endDate}\r\n            startDate={startDateValue}\r\n            boardId=\"qDAFPals\"\r\n            teamName = \"Nauti and Nice\"\r\n          />\r\n         \r\n          <BurnDownContainer \r\n            endDate={endDate}\r\n            startDate={startDateValue}\r\n            boardId=\"xfg9qoms\"\r\n            teamName = \"Unsinkables\"\r\n          />\r\n        </div>\r\n      </div>\r\n    ); \r\n  }; \r\n \r\n\r\n  export default DateRange","import React from 'react';\r\nimport DateRange from '../components/DateRange'\r\n\r\nfunction Team() {\r\n \r\n  return (\r\n      <div className=\"Team\"> \r\n        <DateRange />\r\n        \r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  export default Team;\r\n  ","//setting today to an actual date for my endpoint\r\n\r\n\r\nvar day = new Date()\r\nvar today = day.toISOString().split('T', 1)[0]\r\nvar credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\n\r\nexport const fetchDailyStandUp = {\r\n    method: 'GET',\r\n    endpoint: 'board/qDAFPals/teamstatistics/?today=' + today,\r\n    headers: \r\n    {\"Authorization\": \"Basic \" + btoa(credentials)},\r\n    // parameters:\r\n    // {\r\n    //     \"key\": \"62f0297bf821e374ae28a1fbab5ef9fb\",\r\n    //     \"token\": \"dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5\"\r\n    // }\r\n    \r\n  }\r\n  \r\n  export default fetchDailyStandUp\r\n  ","import React from 'react'\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\n\r\n\r\nconst Statistics = ({ loading, error, items, onReload }) => {\r\n\r\n\r\n    // information what i got from the API,\r\n    // boardId: \"qDAFPals\"\r\n    // date: 1568937600000\r\n    // today: 1568937600000\r\n    // totalDoing: 58\r\n    // totalDone: 45\r\n    // totalReviewing: 14\r\n    // totalTesting: 25\r\n\r\n    items.forEach(item => {\r\n        console.log(\r\n        item.day = new Date(item.date).toUTCString().split('2019', 1)[0],\r\n        item.toDo = item.totalDoing,\r\n        item.done = item.totalDone,\r\n        item.review = item.totalReviewing,\r\n        item.testing = item.totalTesting)\r\n    });\r\n    \r\n    const data = [\r\n        { name: 'Doing' , yesterday: items[0].totalDoing, today: items[1].totalDoing },\r\n        { name: 'Done', yesterday: items[0].totalDone, today: items[1].totalDone },\r\n        { name: 'Reviewing', yesterday: items[0].totalReviewing, today: items[1].totalTesting },\r\n        { name: 'Testing', yesterday: items[0].totalTesting, today: items[1].totalReviewing },\r\n    ];\r\n    var dateToday = items[1].date\r\n    var dateYesterday = items[0].date\r\n\r\n    var today = dateToday\r\n        console.log(items)\r\n\r\n  \r\n    return (\r\n        <div className = 'barChart'>\r\n            {/* BarChart is the output for my data from the api */}\r\n        <BarChart width={900} height={700} data={items}\r\n                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis stroke=\"#f9f9f9\" dataKey=\"day\" />\r\n            <YAxis stroke=\"#f9f9f9\"/>\r\n            <Tooltip/>\r\n            <Legend />\r\n            <Bar dataKey=\"toDo\" fill=\"#23a3dd\" />\r\n            <Bar dataKey=\"testing\" fill=\"#ff9ff3\" />\r\n            <Bar dataKey=\"review\" fill=\"#F16921\" />\r\n            <Bar dataKey=\"done\" fill=\"#009432\" />\r\n        </BarChart>\r\n{/*             \r\n            <BarChart width={600} height={300} data={items}\r\n                  margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <Tooltip/>\r\n            <Legend />\r\n            <Bar dataKey={items[1].date} fill=\"#8884d8\" />\r\n            <Bar dataKey={items[0].date} fill=\"#82ca9d\" />\r\n        </BarChart> */}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default  Statistics\r\n","import React from 'react';\r\nimport { fetchDailyStandUp } from '../apicalls/actions/fetchDailyStandUp';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport Statistics from '../Statistics';\r\n\r\n\r\nexport const DailyStandUpContainer = () => {\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchDailyStandUp);\r\n \r\n  // console.log(loading, payload, error, query);\r\n  return <Statistics loading={loading} error={error} items={payload} onReload={query}/>;\r\n\r\n};\r\n\r\nexport default DailyStandUpContainer;\r\n","//Fetch daily Cards that are new\r\n\r\nvar credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\n\r\nexport const fetchDailyCards = {\r\n    method: 'GET',\r\n    endpoint: '/board/qDAFPals/newCards',\r\n    headers: \r\n    {\"Authorization\": \"Basic \" + btoa(credentials)},\r\n    // parameters:\r\n    // {\r\n    //     \"key\": \"62f0297bf821e374ae28a1fbab5ef9fb\",\r\n    //     \"token\": \"dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5\"\r\n    // }\r\n    \r\n  }\r\n  \r\n  export default fetchDailyCards\r\n  ","import React from 'react'\r\nimport {Card} from \"semantic-ui-react\";\r\n\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <Card>\r\n            <Card.Content\r\n                header={props.Header}\r\n                description={props.Description}\r\n                meta={props.Label}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst DailyStandUpCards = ({ loading, error, items, onReload }) => {\r\n\r\n\r\n    // items.forEach(item => {\r\n    //     console.log(item.name)\r\n    //     item.title = item.name\r\n    //     item.labels.forEach(label => {\r\n    //         console.log(label)\r\n        \r\n    //     })\r\n    //     item.members.forEach(member => {\r\n    //         console.log(member)\r\n    //     })\r\n\r\n    // })\r\n    const Carditems = items.map((item) =>\r\n        item.members.map((member) =>\r\n            item.labels.map((label)=>\r\n                <CardList key={item.id} Header={item.name} MemberId={member.id} Description={member.fullName} LabelId={label.id} Label={label.name} />\r\n    )))\r\n    \r\n    items.map((item) => {\r\n        item.members.map((member) => console.log(member))\r\n        \r\n        //console.log(item.member)\r\n    })\r\n    \r\n    console.log(items)\r\n    return(\r\n        <div>\r\n           {Carditems}\r\n        </div>\r\n    )\r\n    \r\n   \r\n}\r\n\r\nexport default  DailyStandUpCards\r\n","import React from 'react';\r\nimport { fetchDailyCards } from '../apicalls/actions/fetchDailyCards'\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport DailyStandUpCards from '../DailyStandUpCards';\r\n\r\n\r\nexport const DailyStandUpContainer = () => {\r\n    const { loading, payload, error, query} = useSuspenseQuery(fetchDailyCards);\r\n \r\n  // console.log(loading, payload, error, query);\r\n    return ( <div>\r\n        \r\n        <DailyStandUpCards loading={loading} error={error} items={payload} onReload={query} />\r\n        </div>\r\n        )\r\n    \r\n};\r\n\r\nexport default DailyStandUpContainer;\r\n","import React from 'react'\r\n\r\nconst TeamList = ({ items }) => {\r\n\r\n    // items.items.forEach(item => {\r\n    //  item.\r\n      console.log(items)\r\n    // });\r\n    return (\r\n      <div className=\"teamList\">\r\n        {\r\n          items.map((member) =>\r\n            <h4 key={member.id}>{member.fullName}</h4>\r\n          )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamList","import React from 'react';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport TeamList from '../TeamList';\r\n\r\nexport const fetchMembers = () => { \r\n  var credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\n    return {\r\n        method: 'GET',\r\n        endpoint: 'board/qDAFPals/members?key=62f0297bf821e374ae28a1fbab5ef9fb&token=dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5',   //get all mebers\r\n        headers: {\"Authorization\": \"Basic \" + btoa(credentials)},\r\n        key: \"62f0297bf821e374ae28a1fbab5ef9fb\",\r\n        token: \"dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5\"\r\n    \r\n    }\r\n}\r\n\r\nexport const TeamListContainer = () => {\r\n\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchMembers()); \r\n\r\n  return (\r\n    <div>\r\n      <TeamList loading={loading} error={error} items={payload} onReload={query}/>  \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default TeamListContainer;\r\n\r\n\r\n//query data and send to TeamList\r\n","import React from 'react'\r\n\r\nconst PersonalActivity = ({ items }) => {\r\n\r\n    // items.items.forEach(item => {\r\n    //  item.\r\n      console.log(items)\r\n    // });\r\n    return (\r\n    <div>\r\n            {\r\n                items.map((member) => {\r\n                    console.log(member)\r\n                })\r\n    }\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default PersonalActivity","import React from 'react';\r\nimport { useSuspenseQuery } from 'react-fetching-library';\r\nimport PersonalActivity from '../PersonalActivity';\r\n\r\nexport const fetchMemberActivity = () => { \r\n  var credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\n    return {\r\n        method: 'GET',\r\n        endpoint: 'member/5a5c862d056d49a6d1370ad7/actions?key=62f0297bf821e374ae28a1fbab5ef9fb&token=dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5',   //get all mebers\r\n        headers: {\"Authorization\": \"Basic \" + btoa(credentials)},\r\n        key: \"62f0297bf821e374ae28a1fbab5ef9fb\",\r\n        token: \"dd1d9766b7c5be875fe3e73c590bf3d53237f383b719311182c1e76ba9ce0da5\"\r\n    \r\n    }\r\n}\r\n\r\nexport const PersonalActivityContainer = () => {\r\n\r\n  const { loading, payload, error, query} = useSuspenseQuery(fetchMemberActivity()); \r\n    console.log(payload)\r\n  return (\r\n    <div>\r\n      <PersonalActivity loading={loading} error={error} items={payload} onReload={query}/>  \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default PersonalActivityContainer;\r\n\r\n\r\n//query data and send to TeamList\r\n","import React from 'react'\r\nimport DailyStandUpContainer from '../components/dailyStandUp/DailyStandUpContainer'\r\nimport DailyCardContainer from '../components/dailyStandUp/DailyCardContainer'\r\nimport TeamListContainer from '../components/teamList/TeamListContainer'\r\nimport PersonalActivityContainer from '../components/personalActivity/PersonalActivityContainer'\r\n\r\nexport default function DailyStandUp() {\r\n    return (\r\n        <div>\r\n            <DailyStandUpContainer />\r\n            <DailyCardContainer />\r\n            <TeamListContainer />\r\n            <PersonalActivityContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport const SaveSyncConfig = ({settings, loading, error, onSubmit}) => {\r\n    const [key, setKey] = useState(settings.key);\r\n    const [token, setToken] = useState(settings.token);\r\n    const [boards, setBoards] = useState(settings.boards);\r\n\r\n    settings.key = key;\r\n    settings.token = token;\r\n    settings.boards = boards;\r\n\r\n    function changeBoardItem(event, index) {\r\n        const { name, value } = event.target;\r\n        let tempBoards = boards;\r\n        let board = tempBoards[index];\r\n        board[name] = value;\r\n        tempBoards[index] = board;\r\n        setBoards([\r\n            ...tempBoards\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <div className=\"sync-settings\">\r\n            {loading &&\r\n            <p>Loading Data</p>\r\n            }\r\n            {error &&\r\n            <p>ERROR!</p>\r\n            }\r\n            <form>\r\n                <h2>Sync Settings</h2>\r\n                <div>\r\n                    <div>\r\n                        <label htmlFor=\"key\">Trello Key</label>\r\n                        <input type=\"text\" id=\"key\" name=\"key\" value={key} onChange={event => setKey(event.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"token\">Trello OAuth Token</label>\r\n                        <input type=\"text\" id=\"token\" name=\"token\" value={token} onChange={event => setToken(event.target.value)} />\r\n                    </div>\r\n                    {boards && boards.map((value, index) => (\r\n                        <div key={index} className=\"sync-settings-board\">\r\n                            <label htmlFor={\"id-\"+index}>Board ID</label>\r\n                            <input type=\"text\" className=\"form-control\" id={\"id-\"+index} name={\"id\"} value={value.id} onChange={event => changeBoardItem(event, index)} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <button onClick={e => {\r\n                        e.preventDefault();\r\n                        onSubmit(settings)\r\n                    }\r\n                }>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {useMutation, useSuspenseQuery} from \"react-fetching-library\";\r\nimport {SaveSyncConfig} from \"./SaveSyncConfig\";\r\n\r\nvar credentials = localStorage.getItem(\"uname\") + \":\" + localStorage.getItem(\"pw\")\r\nconst getSyncConfigAction = {\r\n\r\n    \r\n    method: \"GET\",\r\n    endpoint: \"config/getSyncInfo\",\r\n    headers:\r\n        {\"Authorization\": \"Basic \" + btoa(credentials)}\r\n};\r\n\r\nconst saveSyncConfigAction = (formValues) => ({\r\n    method: 'PUT',\r\n    endpoint: \"config/saveSyncInfo\",\r\n    body: formValues,\r\n    headers:\r\n        {\"Authorization\": \"Basic \" + btoa(credentials)}\r\n});\r\n\r\nexport const SyncConfigContainer = () => {\r\n    const getQuery = useSuspenseQuery(getSyncConfigAction);\r\n    const saveMutation = useMutation(saveSyncConfigAction);\r\n\r\n    const handleSubmit = async (formValues) => {\r\n        const { error: mutateError } = await saveMutation.mutate(formValues);\r\n\r\n        if (mutateError) {\r\n            console.error(mutateError)\r\n        }\r\n        console.log(saveMutation.payload)\r\n    };\r\n\r\n    if (!getQuery.payload) {\r\n        const tempPayload = {\r\n            key: \"\",\r\n            token: \"\",\r\n            boards: []\r\n        };\r\n\r\n        //return <p>Loading</p>\r\n        return <SaveSyncConfig loading={getQuery.loading} error={getQuery.error} settings={tempPayload} onSubmit={handleSubmit} />\r\n    } else {\r\n        console.log(getQuery.payload);\r\n\r\n        return <SaveSyncConfig loading={getQuery.loading} error={getQuery.error} settings={getQuery.payload} onSubmit={handleSubmit} />\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport {SyncConfigContainer} from \"../components/SyncConfig/SyncConfigContainer\";\r\n\r\nfunction Settings() {\r\n    return (\r\n        <div className=\"settings\">\r\n            <h1>Settings</h1>\r\n            <SyncConfigContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","import React, { useState } from 'react';\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport {useMutation} from \"react-fetching-library\";\r\nimport { check } from \"../App\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n//api request ->\r\nconst loginAction = (username, password) => {\r\n  return {\r\n    method: 'GET',\r\n    endpoint: \"login?username=\" + username +  \"&password=\" + password \r\n  \r\n    //GET password and username     \r\n    //Return true or false\r\n   \r\n  }\r\n}\r\n\r\nexport const Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n  const loginMutation = useMutation(loginAction);\r\n\r\n  const handleSubmit = async () => {\r\n    const { error: mutateError } = await loginMutation.mutate(username, password);\r\n\r\n    if (mutateError) {\r\n        console.error(mutateError)\r\n        return\r\n    }\r\n    localStorage.setItem(\"uname\", username)\r\n    localStorage.setItem(\"pw\", password)\r\n  };\r\n\r\n  return(\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as='h2' color='blue' textAlign='center'>\r\n          <i className=\"fa fa-teqplay\" /> Log-in to your account\r\n        </Header>\r\n        <Form size='large'  >\r\n          <Segment stacked>\r\n            <Form.Input \r\n             fluid icon='user'\r\n             iconPosition='left'\r\n             placeholder='Username'\r\n             id=\"uname\"\r\n             value={username}\r\n             onChange={event => {setUsername(event.target.value)}}\r\n           \r\n            />\r\n            <Form.Input\r\n              \r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              type=\"password\"\r\n              placeholder='Password'\r\n              id='pw'\r\n              value={password}\r\n              onChange={event => {setPassword(event.target.value)}}\r\n             \r\n \r\n            />\r\n  \r\n            <Button color='orange' fluid size='large' onClick={handleSubmit} href=\"../\" >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Login } from '../components/Login';\r\nexport default function LoginPage() {\r\n    return (\r\n        <div className=\"LoginPage\">\r\n            \r\n              <Login />\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { Suspense } from 'react';\r\n\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\"\r\nimport Navbar from './components/layout/Navbar'\r\nimport './sass/App.scss';\r\nimport { ClientContextProvider } from 'react-fetching-library';\r\nimport { Client } from './components/apicalls/Client';\r\nimport Home from \"./pages/Personal\";\r\nimport Leaderboard from \"./pages/Leaderboard\";\r\nimport Team from \"./pages/Team\";\r\nimport DailyStandUp from './pages/DailyStandUp'\r\nimport Settings from \"./pages/Settings\";\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport LoginPage from './pages/LoginPage';\r\n  //added fetching-library client to root.\r\n\r\n  export function check() {  \r\n    // get stored data from the localStorage \r\n    var storedName = localStorage.getItem('uname');\r\n    var storedPw = localStorage.getItem('pw');\r\n    console.log(storedName);\r\n    console.log(storedPw);\r\n    // check if stored data has a value if no data or data null return false \r\n    if(storedName != null && storedName !== \"\" && storedPw != null && storedPw !== \"\") {\r\n\r\n      return true\r\n    }else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  function CheckIfLoggedIn(loggedIn) { //if check() = loggedIn >returns true\r\n    if (loggedIn) {\r\n  \r\n      console.log(\"true\")\r\n      return <Navbar/>   //geef de navbar weer\r\n    } else {\r\n    \r\n      console.log(\"false\")\r\n      return <Redirect to=\"/Login\"/>  //if false redirect naar Login pagina\r\n    }\r\n  }\r\n\r\n  function App() {\r\n    const loggedIn = check()   //execute login check wile opening page\r\n    console.log(\"check\")\r\n\r\n    return (\r\n      <ClientContextProvider client={Client}> \r\n       <Suspense fallback={ <div><i className=\"fa fa-teqplay fa-spin\"/></div>}>\r\n          {/* While loading display teqPlay loader */}\r\n         <div className=\"App\">\r\n           <HashRouter basename=\"/\"> \r\n           {/* When opening home page run CheckIfLoggedIn if loggedIn = true */}\r\n              {CheckIfLoggedIn(loggedIn)}\r\n              {loggedIn &&\r\n                <div>\r\n                  <Route exact path=\"/\" component={Home}/>\r\n                  <Route path=\"/Leaderboard\" component={Leaderboard}/>\r\n                  <Route path=\"/Team\" component={Team}/>\r\n                  <Route path=\"/DailyStandUp\" component={DailyStandUp}/>\r\n                  <Route path=\"/Settings\" component={Settings}/>\r\n                </div>\r\n              }\r\n            <Route path=\"/Login\" component={LoginPage}/>             \r\n           </HashRouter>\r\n         </div>\r\n       </Suspense> \r\n     </ClientContextProvider>\r\n  )\r\n    \r\n}\r\nexport default App\r\n \r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ClientContextProvider, createClient} from \"react-fetching-library\";\r\nimport fontawesome from \"@fortawesome/fontawesome-free\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faTeqplay } from \"./faTeqPlay\";\r\n\r\nconst client = createClient({\r\n});\r\n\r\n// library.add(faTeqplay);\r\nlibrary.add(faTeqplay);\r\n\r\nReactDOM.render(\r\n        <ClientContextProvider client={client}>\r\n            <App />\r\n        </ClientContextProvider>,\r\n        document.getElementById('root')\r\n    );\r\n\r\nserviceWorker.unregister();\r\n","/**\r\n * Custom Fontawesome logo of the Teqplay brand\r\n *\r\n * Loading the icon:\r\n *\r\n *     import fontawesome from \"@fortawesome/fontawesome\";\r\n *     import { faTeqplay } from \"./faTeqplay\";\r\n *\r\n *     fontawesome.library.add(faTeqplay);\r\n *\r\n * Using the icon:\r\n *\r\n *     <i className=\"fa fa-teqplay\" />\r\n */\r\nexport const faTeqplay = {\r\n    prefix: \"fa\",\r\n    iconName: \"teqplay\",\r\n    icon: [\r\n      512,\r\n      512,\r\n      [],\r\n      null,\r\n      \"M 256, 256 m 0, 256 a 256,256 0 1,0 -0.01,0 M 368,254 L 342,368 L 232,480 L 218,405 L 144,390 L 254,280 z M 113.16, 113.16 a 202,202 0 0,1 285.67,0 l -31.11, 31.11 a 158,158 0 0,0 -223.45,0 l -31.11, -31.11 M 165.49, 165.49 a 128,128 0 0,1 181.02,0 l -31.11, 31.11 a 84,84 0 0,0 -118.79,0 l -31.11, -31.11\"\r\n    ]\r\n  };\r\n  "],"sourceRoot":""}